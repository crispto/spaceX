<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="742" onload="init(evt)" viewBox="0 0 1200 742" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="742.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="725" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="725" > </text>
<g id="frames">
<g >
<title>native_write_msr (2,312,261 samples, 0.02%)</title><rect x="42.3" y="341" width="0.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="45.34" y="351.5" ></text>
</g>
<g >
<title>menu_select (8,867,956 samples, 0.06%)</title><rect x="1189.3" y="517" width="0.7" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.28" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (101,172,001 samples, 0.70%)</title><rect x="46.3" y="517" width="8.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="49.29" y="527.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (3,510,531 samples, 0.02%)</title><rect x="55.2" y="485" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="58.24" y="495.5" ></text>
</g>
<g >
<title>ep_autoremove_wake_function (5,194,942 samples, 0.04%)</title><rect x="20.4" y="85" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="23.36" y="95.5" ></text>
</g>
<g >
<title>update_load_avg (12,880,536 samples, 0.09%)</title><rect x="52.0" y="453" width="1.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="55.03" y="463.5" ></text>
</g>
<g >
<title>__wake_up_common (8,485,264 samples, 0.06%)</title><rect x="20.1" y="165" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="23.09" y="175.5" ></text>
</g>
<g >
<title>update_rt_rq_load_avg (4,068,399 samples, 0.03%)</title><rect x="53.1" y="453" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="56.08" y="463.5" ></text>
</g>
<g >
<title>add_interrupt_randomness (1,341,554 samples, 0.01%)</title><rect x="18.3" y="453" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="21.26" y="463.5" ></text>
</g>
<g >
<title>hidinput_hid_event (4,707,658 samples, 0.03%)</title><rect x="19.7" y="341" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="22.70" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (20,677,719 samples, 0.14%)</title><rect x="10.9" y="565" width="1.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.93" y="575.5" ></text>
</g>
<g >
<title>tick_program_event (1,640,230 samples, 0.01%)</title><rect x="1110.3" y="421" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1113.26" y="431.5" ></text>
</g>
<g >
<title>asm_common_interrupt (52,089,191 samples, 0.36%)</title><rect x="17.3" y="549" width="4.2" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="20.25" y="559.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (9,537,819 samples, 0.07%)</title><rect x="40.2" y="437" width="0.8" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="43.17" y="447.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,909,394 samples, 0.02%)</title><rect x="51.6" y="453" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="54.58" y="463.5" ></text>
</g>
<g >
<title>__wake_up (5,194,942 samples, 0.04%)</title><rect x="20.4" y="133" width="0.4" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="23.36" y="143.5" ></text>
</g>
<g >
<title>ip_sublist_rcv (4,240,053 samples, 0.03%)</title><rect x="18.9" y="357" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="21.86" y="367.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (4,240,053 samples, 0.03%)</title><rect x="18.9" y="261" width="0.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="21.86" y="271.5" ></text>
</g>
<g >
<title>irq_work_needs_cpu (11,746,088 samples, 0.08%)</title><rect x="1106.3" y="549" width="1.0" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1109.35" y="559.5" ></text>
</g>
<g >
<title>enqueue_task_fair (8,694,682 samples, 0.06%)</title><rect x="1109.0" y="341" width="0.7" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1112.02" y="351.5" ></text>
</g>
<g >
<title>xhci_msi_irq (2,986,206 samples, 0.02%)</title><rect x="18.0" y="437" width="0.3" height="15.0" fill="rgb(251,213,50)" rx="2" ry="2" />
<text  x="21.02" y="447.5" ></text>
</g>
<g >
<title>leave_mm (9,661,789 samples, 0.07%)</title><rect x="1087.9" y="549" width="0.8" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1090.92" y="559.5" ></text>
</g>
<g >
<title>ip_local_deliver (4,240,053 samples, 0.03%)</title><rect x="18.9" y="325" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="21.86" y="335.5" ></text>
</g>
<g >
<title>hidinput_report_event (13,066,734 samples, 0.09%)</title><rect x="20.1" y="373" width="1.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="23.09" y="383.5" ></text>
</g>
<g >
<title>native_write_msr (1,503,830 samples, 0.01%)</title><rect x="1188.6" y="485" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1191.60" y="495.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="629" width="81.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1111.75" y="639.5" >x86_64_st..</text>
</g>
<g >
<title>enqueue_task_fair (3,510,531 samples, 0.02%)</title><rect x="55.2" y="437" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="58.24" y="447.5" ></text>
</g>
<g >
<title>timekeeping_advance (8,485,419 samples, 0.06%)</title><rect x="40.3" y="405" width="0.7" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="43.26" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (3,967,417 samples, 0.03%)</title><rect x="1109.4" y="309" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1112.35" y="319.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (3,304,423 samples, 0.02%)</title><rect x="1110.5" y="405" width="0.3" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1113.50" y="415.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (26,500,494 samples, 0.18%)</title><rect x="19.3" y="469" width="2.1" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="22.26" y="479.5" ></text>
</g>
<g >
<title>enqueue_entity (3,510,531 samples, 0.02%)</title><rect x="55.2" y="421" width="0.3" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="58.24" y="431.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1,945,239 samples, 0.01%)</title><rect x="39.1" y="421" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="42.07" y="431.5" ></text>
</g>
<g >
<title>__wake_up_common (8,485,264 samples, 0.06%)</title><rect x="20.1" y="229" width="0.7" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="23.09" y="239.5" ></text>
</g>
<g >
<title>load_balance (4,344,404 samples, 0.03%)</title><rect x="1111.0" y="373" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1113.98" y="383.5" ></text>
</g>
<g >
<title>input_handle_event (13,066,734 samples, 0.09%)</title><rect x="20.1" y="341" width="1.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="23.09" y="351.5" ></text>
</g>
<g >
<title>native_apic_mem_write (4,519,923 samples, 0.03%)</title><rect x="54.8" y="517" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="57.77" y="527.5" ></text>
</g>
<g >
<title>handle_tx_event (2,332,678 samples, 0.02%)</title><rect x="18.0" y="405" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="21.02" y="415.5" ></text>
</g>
<g >
<title>xhci_urb_enqueue (3,248,348 samples, 0.02%)</title><rect x="21.2" y="373" width="0.2" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="24.15" y="383.5" ></text>
</g>
<g >
<title>rcu_idle_enter (1,917,623 samples, 0.01%)</title><rect x="1092.2" y="549" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1095.15" y="559.5" ></text>
</g>
<g >
<title>update_blocked_averages (35,156,738 samples, 0.24%)</title><rect x="50.6" y="469" width="2.8" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="53.55" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (11,299,236 samples, 0.08%)</title><rect x="1110.8" y="437" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1113.77" y="447.5" ></text>
</g>
<g >
<title>switch_mm (9,661,789 samples, 0.07%)</title><rect x="1087.9" y="533" width="0.8" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1090.92" y="543.5" ></text>
</g>
<g >
<title>ep_poll_callback (8,485,264 samples, 0.06%)</title><rect x="20.1" y="213" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="23.09" y="223.5" ></text>
</g>
<g >
<title>hrtimer_next_event_without (34,801,926 samples, 0.24%)</title><rect x="1103.5" y="549" width="2.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1106.51" y="559.5" ></text>
</g>
<g >
<title>__kfree_skb (4,240,053 samples, 0.03%)</title><rect x="18.9" y="213" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="21.86" y="223.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (5,194,942 samples, 0.04%)</title><rect x="20.4" y="117" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="23.36" y="127.5" ></text>
</g>
<g >
<title>__next_base (14,299,816 samples, 0.10%)</title><rect x="1105.0" y="533" width="1.2" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="1108.04" y="543.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (3,510,531 samples, 0.02%)</title><rect x="55.2" y="501" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="58.24" y="511.5" ></text>
</g>
<g >
<title>perf_event_task_tick (8,755,278 samples, 0.06%)</title><rect x="41.8" y="405" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="44.82" y="415.5" ></text>
</g>
<g >
<title>irqentry_exit (1,667,022 samples, 0.01%)</title><rect x="21.5" y="533" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="24.50" y="543.5" ></text>
</g>
<g >
<title>do_idle (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="549" width="81.3" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1111.75" y="559.5" >do_idle</text>
</g>
<g >
<title>tick_sched_timer (6,455,328 samples, 0.04%)</title><rect x="1109.7" y="405" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1112.73" y="415.5" ></text>
</g>
<g >
<title>xhci_td_cleanup (2,332,678 samples, 0.02%)</title><rect x="18.0" y="373" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="21.02" y="383.5" ></text>
</g>
<g >
<title>cpu_startup_entry (13,477,703,038 samples, 93.11%)</title><rect x="10.0" y="629" width="1098.7" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >cpu_startup_entry</text>
</g>
<g >
<title>cpuidle_governor_latency_req (2,177,013 samples, 0.02%)</title><rect x="1096.0" y="581" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1099.03" y="591.5" ></text>
</g>
<g >
<title>cpuidle_select (3,785,028 samples, 0.03%)</title><rect x="10.4" y="613" width="0.3" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="13.36" y="623.5" ></text>
</g>
<g >
<title>__common_interrupt (19,664,113 samples, 0.14%)</title><rect x="17.3" y="517" width="1.6" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="20.25" y="527.5" ></text>
</g>
<g >
<title>sched_ttwu_pending (3,510,531 samples, 0.02%)</title><rect x="55.2" y="469" width="0.3" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="58.24" y="479.5" ></text>
</g>
<g >
<title>sched_clock_cpu (5,722,917 samples, 0.04%)</title><rect x="1092.6" y="549" width="0.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1095.59" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,790,240 samples, 0.12%)</title><rect x="1109.0" y="453" width="1.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1112.02" y="463.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (9,537,819 samples, 0.07%)</title><rect x="40.2" y="453" width="0.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="43.17" y="463.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (981,103,310 samples, 6.78%)</title><rect x="1108.9" y="501" width="79.9" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1111.85" y="511.5" >cpuidle_e..</text>
</g>
<g >
<title>handle_irq_event_percpu (18,158,243 samples, 0.13%)</title><rect x="17.4" y="469" width="1.5" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="20.38" y="479.5" ></text>
</g>
<g >
<title>rcu_eqs_enter.constprop.0 (10,453,713 samples, 0.07%)</title><rect x="1090.5" y="549" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1093.52" y="559.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (13,264,230,508 samples, 91.64%)</title><rect x="12.6" y="565" width="1081.4" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="15.62" y="575.5" >cpuidle_enter_state</text>
</g>
<g >
<title>iterate_groups.isra.0 (1,883,351 samples, 0.01%)</title><rect x="35.2" y="405" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="38.20" y="415.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (14,474,383,996 samples, 100.00%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >secondary_startup_64_no_verify</text>
</g>
<g >
<title>native_write_msr (1,640,230 samples, 0.01%)</title><rect x="1110.3" y="389" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1113.26" y="399.5" ></text>
</g>
<g >
<title>scheduler_tick (1,597,614 samples, 0.01%)</title><rect x="1110.1" y="357" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1113.13" y="367.5" ></text>
</g>
<g >
<title>rebalance_domains (49,160,219 samples, 0.34%)</title><rect x="46.5" y="469" width="4.1" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="49.54" y="479.5" ></text>
</g>
<g >
<title>__wake_up (8,485,264 samples, 0.06%)</title><rect x="20.1" y="261" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="23.09" y="271.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (2,181,445 samples, 0.02%)</title><rect x="35.0" y="357" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="38.03" y="367.5" ></text>
</g>
<g >
<title>error_return (1,338,834 samples, 0.01%)</title><rect x="1094.0" y="565" width="0.1" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1096.96" y="575.5" ></text>
</g>
<g >
<title>get_cpu_device (2,227,657 samples, 0.02%)</title><rect x="1101.6" y="549" width="0.2" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="1104.62" y="559.5" ></text>
</g>
<g >
<title>try_to_wake_up (5,194,942 samples, 0.04%)</title><rect x="20.4" y="53" width="0.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="23.36" y="63.5" ></text>
</g>
<g >
<title>irq_work_tick (4,857,714 samples, 0.03%)</title><rect x="1109.7" y="357" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1112.73" y="367.5" ></text>
</g>
<g >
<title>__wake_up_common (5,194,942 samples, 0.04%)</title><rect x="20.4" y="101" width="0.4" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="23.36" y="111.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (239,566,138 samples, 1.66%)</title><rect x="23.6" y="485" width="19.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="26.63" y="495.5" ></text>
</g>
<g >
<title>update_process_times (2,123,794 samples, 0.01%)</title><rect x="42.5" y="453" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="45.53" y="463.5" ></text>
</g>
<g >
<title>intel_idle_ibrs (11,970,232,995 samples, 82.70%)</title><rect x="112.1" y="549" width="975.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="115.07" y="559.5" >intel_idle_ibrs</text>
</g>
<g >
<title>enqueue_entity (4,650,178 samples, 0.03%)</title><rect x="1109.3" y="325" width="0.4" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="1112.30" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (22,130,998 samples, 0.15%)</title><rect x="1088.7" y="549" width="1.8" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="1091.71" y="559.5" ></text>
</g>
<g >
<title>tasklet_hi_action (26,500,494 samples, 0.18%)</title><rect x="19.3" y="485" width="2.1" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="22.26" y="495.5" ></text>
</g>
<g >
<title>arch_call_rest_init (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="597" width="81.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1111.75" y="607.5" >arch_call..</text>
</g>
<g >
<title>usb_giveback_urb_bh (26,500,494 samples, 0.18%)</title><rect x="19.3" y="453" width="2.1" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="22.26" y="463.5" ></text>
</g>
<g >
<title>cpuidle_reflect (6,736,132 samples, 0.05%)</title><rect x="1095.5" y="597" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1098.49" y="607.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1,686,898 samples, 0.01%)</title><rect x="39.6" y="437" width="0.1" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="42.56" y="447.5" ></text>
</g>
<g >
<title>enqueue_task_fair (110,974,547 samples, 0.77%)</title><rect x="26.2" y="405" width="9.0" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="29.16" y="415.5" ></text>
</g>
<g >
<title>__remove_hrtimer (10,480,736 samples, 0.07%)</title><rect x="23.8" y="469" width="0.8" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="26.79" y="479.5" ></text>
</g>
<g >
<title>tick_check_oneshot_broadcast_this_cpu (10,175,484 samples, 0.07%)</title><rect x="44.1" y="501" width="0.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="47.06" y="511.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (32,743,731 samples, 0.23%)</title><rect x="1109.0" y="485" width="2.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1112.02" y="495.5" ></text>
</g>
<g >
<title>cpuidle_enter (982,600,708 samples, 6.79%)</title><rect x="1108.9" y="517" width="80.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1111.85" y="527.5" >cpuidle_e..</text>
</g>
<g >
<title>switch_mm (6,190,741 samples, 0.04%)</title><rect x="1188.1" y="469" width="0.5" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.10" y="479.5" ></text>
</g>
<g >
<title>find_busiest_group (4,344,404 samples, 0.03%)</title><rect x="1111.0" y="357" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1113.98" y="367.5" ></text>
</g>
<g >
<title>input_to_handler (13,066,734 samples, 0.09%)</title><rect x="20.1" y="309" width="1.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="23.09" y="319.5" ></text>
</g>
<g >
<title>__sysvec_call_function_single (3,510,531 samples, 0.02%)</title><rect x="55.2" y="517" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="58.24" y="527.5" ></text>
</g>
<g >
<title>update_ts_time_stats (3,304,423 samples, 0.02%)</title><rect x="1110.5" y="421" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1113.50" y="431.5" ></text>
</g>
<g >
<title>xhci_queue_bulk_tx (3,248,348 samples, 0.02%)</title><rect x="21.2" y="341" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="24.15" y="351.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (2,401,123 samples, 0.02%)</title><rect x="39.7" y="437" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="42.70" y="447.5" ></text>
</g>
<g >
<title>ip_sublist_rcv_finish (4,240,053 samples, 0.03%)</title><rect x="18.9" y="341" width="0.3" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="21.86" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (19,375,489 samples, 0.13%)</title><rect x="41.0" y="453" width="1.5" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="43.95" y="463.5" ></text>
</g>
<g >
<title>xhci_queue_intr_tx (3,248,348 samples, 0.02%)</title><rect x="21.2" y="357" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="24.15" y="367.5" ></text>
</g>
<g >
<title>leave_mm (6,190,741 samples, 0.04%)</title><rect x="1188.1" y="485" width="0.5" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1191.10" y="495.5" ></text>
</g>
<g >
<title>tcp_v4_rcv (4,240,053 samples, 0.03%)</title><rect x="18.9" y="277" width="0.3" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="21.86" y="287.5" ></text>
</g>
<g >
<title>nr_iowait_cpu (5,431,676 samples, 0.04%)</title><rect x="45.9" y="469" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="48.85" y="479.5" ></text>
</g>
<g >
<title>update_blocked_averages (4,361,254 samples, 0.03%)</title><rect x="1111.3" y="405" width="0.4" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="1114.34" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,513,441 samples, 0.01%)</title><rect x="25.6" y="421" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="28.61" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (34,443,482 samples, 0.24%)</title><rect x="39.9" y="469" width="2.8" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="42.90" y="479.5" ></text>
</g>
<g >
<title>ksoftirqd_running (2,730,819 samples, 0.02%)</title><rect x="54.5" y="517" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="57.54" y="527.5" ></text>
</g>
<g >
<title>input_get_timestamp (4,581,470 samples, 0.03%)</title><rect x="20.8" y="277" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="23.78" y="287.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (8,485,264 samples, 0.06%)</title><rect x="20.1" y="245" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="23.09" y="255.5" ></text>
</g>
<g >
<title>run_timer_softirq (4,350,734 samples, 0.03%)</title><rect x="53.4" y="485" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="56.42" y="495.5" ></text>
</g>
<g >
<title>down_trylock (2,116,042 samples, 0.01%)</title><rect x="19.3" y="389" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="22.26" y="399.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (32,743,731 samples, 0.23%)</title><rect x="1109.0" y="469" width="2.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1112.02" y="479.5" ></text>
</g>
<g >
<title>ttwu_do_activate (158,360,097 samples, 1.09%)</title><rect x="26.2" y="421" width="12.9" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="29.16" y="431.5" ></text>
</g>
<g >
<title>ktime_get (5,138,231 samples, 0.04%)</title><rect x="54.1" y="485" width="0.4" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="57.12" y="495.5" ></text>
</g>
<g >
<title>net_rx_action (4,240,053 samples, 0.03%)</title><rect x="18.9" y="485" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="21.86" y="495.5" ></text>
</g>
<g >
<title>run_rebalance_domains (86,283,221 samples, 0.60%)</title><rect x="46.4" y="485" width="7.0" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="49.38" y="495.5" ></text>
</g>
<g >
<title>native_read_msr (2,687,437 samples, 0.02%)</title><rect x="41.6" y="389" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="44.60" y="399.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (11,740,554 samples, 0.08%)</title><rect x="49.6" y="421" width="1.0" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="52.59" y="431.5" ></text>
</g>
<g >
<title>menu_reflect (3,942,317 samples, 0.03%)</title><rect x="1095.5" y="581" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1098.49" y="591.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (18,808,019 samples, 0.13%)</title><rect x="1103.5" y="533" width="1.5" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1106.51" y="543.5" ></text>
</g>
<g >
<title>gro_normal_list.part.0 (4,240,053 samples, 0.03%)</title><rect x="18.9" y="421" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="21.86" y="431.5" ></text>
</g>
<g >
<title>update_wall_time (8,485,419 samples, 0.06%)</title><rect x="40.3" y="421" width="0.7" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="43.26" y="431.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (6,706,244 samples, 0.05%)</title><rect x="43.2" y="485" width="0.5" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="46.16" y="495.5" ></text>
</g>
<g >
<title>skb_release_data (2,225,349 samples, 0.02%)</title><rect x="19.0" y="181" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="22.02" y="191.5" ></text>
</g>
<g >
<title>handle_edge_irq (19,664,113 samples, 0.14%)</title><rect x="17.3" y="501" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="20.25" y="511.5" ></text>
</g>
<g >
<title>hid_input_report (23,252,146 samples, 0.16%)</title><rect x="19.3" y="405" width="1.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="22.26" y="415.5" ></text>
</g>
<g >
<title>sched_idle_set_state (3,457,140 samples, 0.02%)</title><rect x="1093.1" y="549" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1096.05" y="559.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (4,184,604 samples, 0.03%)</title><rect x="55.2" y="549" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="58.24" y="559.5" ></text>
</g>
<g >
<title>rcu_idle_enter (6,559,962 samples, 0.05%)</title><rect x="1094.1" y="565" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1097.07" y="575.5" ></text>
</g>
<g >
<title>tick_nohz_get_sleep_length (67,792,508 samples, 0.47%)</title><rect x="1103.2" y="565" width="5.5" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1106.22" y="575.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2,312,261 samples, 0.02%)</title><rect x="42.3" y="357" width="0.2" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="45.34" y="367.5" ></text>
</g>
<g >
<title>rest_init (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="581" width="81.3" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="1111.75" y="591.5" >rest_init</text>
</g>
<g >
<title>wake_up_process (8,694,682 samples, 0.06%)</title><rect x="1109.0" y="389" width="0.7" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1112.02" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (27,521,311 samples, 0.19%)</title><rect x="33.0" y="373" width="2.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="35.96" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_se (3,802,166 samples, 0.03%)</title><rect x="1111.4" y="373" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1114.38" y="383.5" ></text>
</g>
<g >
<title>__netif_receive_skb_list_core (4,240,053 samples, 0.03%)</title><rect x="18.9" y="389" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="21.86" y="399.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (1,654,324 samples, 0.01%)</title><rect x="1088.6" y="501" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1091.58" y="511.5" ></text>
</g>
<g >
<title>run_rebalance_domains (8,705,658 samples, 0.06%)</title><rect x="1111.0" y="421" width="0.7" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1113.98" y="431.5" ></text>
</g>
<g >
<title>input_pass_values.part.0 (13,066,734 samples, 0.09%)</title><rect x="20.1" y="325" width="1.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="23.09" y="335.5" ></text>
</g>
<g >
<title>input_event (13,066,734 samples, 0.09%)</title><rect x="20.1" y="357" width="1.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="23.09" y="367.5" ></text>
</g>
<g >
<title>lapic_next_deadline (1,258,375 samples, 0.01%)</title><rect x="44.0" y="469" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="46.96" y="479.5" ></text>
</g>
<g >
<title>sched_clock (4,638,414 samples, 0.03%)</title><rect x="1092.7" y="533" width="0.4" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="1095.68" y="543.5" ></text>
</g>
<g >
<title>ktime_mono_to_any (4,581,470 samples, 0.03%)</title><rect x="20.8" y="245" width="0.4" height="15.0" fill="rgb(213,36,8)" rx="2" ry="2" />
<text  x="23.78" y="255.5" ></text>
</g>
<g >
<title>start_secondary (13,477,703,038 samples, 93.11%)</title><rect x="10.0" y="645" width="1098.7" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >start_secondary</text>
</g>
<g >
<title>set_task_cpu (1,526,479 samples, 0.01%)</title><rect x="26.0" y="421" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="29.03" y="431.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (412,139,350 samples, 2.85%)</title><rect x="21.6" y="533" width="33.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="24.64" y="543.5" >sy..</text>
</g>
<g >
<title>_raw_read_unlock_irqrestore (3,290,322 samples, 0.02%)</title><rect x="20.1" y="149" width="0.3" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="23.09" y="159.5" ></text>
</g>
<g >
<title>netif_receive_skb_list_internal (4,240,053 samples, 0.03%)</title><rect x="18.9" y="405" width="0.3" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="21.86" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_irq_exit (5,138,231 samples, 0.04%)</title><rect x="54.1" y="501" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="57.12" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (2,312,261 samples, 0.02%)</title><rect x="42.3" y="389" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="45.34" y="399.5" ></text>
</g>
<g >
<title>finish_td (2,332,678 samples, 0.02%)</title><rect x="18.0" y="389" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="21.02" y="399.5" ></text>
</g>
<g >
<title>clockevents_program_event (1,640,230 samples, 0.01%)</title><rect x="1110.3" y="405" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1113.26" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (15,150,010 samples, 0.10%)</title><rect x="1109.0" y="421" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1112.02" y="431.5" ></text>
</g>
<g >
<title>try_to_wake_up (176,677,818 samples, 1.22%)</title><rect x="25.2" y="437" width="14.4" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="28.16" y="447.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (6,455,328 samples, 0.04%)</title><rect x="1109.7" y="389" width="0.6" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1112.73" y="399.5" ></text>
</g>
<g >
<title>cpuidle_select (8,867,956 samples, 0.06%)</title><rect x="1189.3" y="533" width="0.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1192.28" y="543.5" ></text>
</g>
<g >
<title>timerqueue_del (5,574,390 samples, 0.04%)</title><rect x="42.7" y="469" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="45.70" y="479.5" ></text>
</g>
<g >
<title>psi_task_change (43,370,836 samples, 0.30%)</title><rect x="35.4" y="405" width="3.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="38.36" y="415.5" ></text>
</g>
<g >
<title>skb_free_head (2,225,349 samples, 0.02%)</title><rect x="19.0" y="165" width="0.2" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="22.02" y="175.5" ></text>
</g>
<g >
<title>rcu_irq_enter (1,250,583 samples, 0.01%)</title><rect x="55.1" y="517" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="58.13" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (8,485,264 samples, 0.06%)</title><rect x="20.1" y="181" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="23.09" y="191.5" ></text>
</g>
<g >
<title>enqueue_entity (30,697,670 samples, 0.21%)</title><rect x="32.7" y="389" width="2.5" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="35.70" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_se (3,967,417 samples, 0.03%)</title><rect x="1109.4" y="293" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1112.35" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (253,388,002 samples, 1.75%)</title><rect x="23.4" y="501" width="20.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="26.40" y="511.5" ></text>
</g>
<g >
<title>intel_idle (59,346,734 samples, 0.41%)</title><rect x="1111.7" y="485" width="4.8" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="1114.69" y="495.5" ></text>
</g>
<g >
<title>skb_release_all (2,225,349 samples, 0.02%)</title><rect x="19.0" y="197" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="22.02" y="207.5" ></text>
</g>
<g >
<title>ttwu_do_activate (8,694,682 samples, 0.06%)</title><rect x="1109.0" y="357" width="0.7" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="1112.02" y="367.5" ></text>
</g>
<g >
<title>hrtimer_get_next_event (1,595,680 samples, 0.01%)</title><rect x="1108.6" y="533" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1111.62" y="543.5" ></text>
</g>
<g >
<title>tick_nohz_next_event (17,691,292 samples, 0.12%)</title><rect x="1107.3" y="549" width="1.4" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1110.30" y="559.5" ></text>
</g>
<g >
<title>input_set_timestamp (4,581,470 samples, 0.03%)</title><rect x="20.8" y="261" width="0.4" height="15.0" fill="rgb(243,175,42)" rx="2" ry="2" />
<text  x="23.78" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event (19,664,113 samples, 0.14%)</title><rect x="17.3" y="485" width="1.6" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="20.25" y="495.5" ></text>
</g>
<g >
<title>menu_select (153,766,267 samples, 1.06%)</title><rect x="1096.2" y="581" width="12.5" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1099.21" y="591.5" ></text>
</g>
<g >
<title>cpu_startup_entry (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="565" width="81.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1111.75" y="575.5" >cpu_start..</text>
</g>
<g >
<title>native_sched_clock (4,638,414 samples, 0.03%)</title><rect x="1092.7" y="517" width="0.4" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1095.68" y="527.5" ></text>
</g>
<g >
<title>cpuidle_enter (13,303,592,059 samples, 91.91%)</title><rect x="10.9" y="581" width="1084.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="13.93" y="591.5" >cpuidle_enter</text>
</g>
<g >
<title>call_cpuidle (983,918,568 samples, 6.80%)</title><rect x="1108.7" y="533" width="80.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="1111.75" y="543.5" >call_cpui..</text>
</g>
<g >
<title>sched_clock_cpu (1,318,321 samples, 0.01%)</title><rect x="1095.4" y="565" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1098.38" y="575.5" ></text>
</g>
<g >
<title>cpuidle_governor_latency_req (2,969,514 samples, 0.02%)</title><rect x="1101.6" y="565" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1104.56" y="575.5" ></text>
</g>
<g >
<title>select_task_rq_fair (2,683,549 samples, 0.02%)</title><rect x="25.8" y="421" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="28.81" y="431.5" ></text>
</g>
<g >
<title>__kmalloc (3,361,712 samples, 0.02%)</title><rect x="19.4" y="357" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="22.43" y="367.5" ></text>
</g>
<g >
<title>update_rq_clock (4,133,283 samples, 0.03%)</title><rect x="39.2" y="421" width="0.4" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="42.23" y="431.5" ></text>
</g>
<g >
<title>evdev_pass_values.part.0 (8,485,264 samples, 0.06%)</title><rect x="20.1" y="277" width="0.7" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="23.09" y="287.5" ></text>
</g>
<g >
<title>napi_complete_done (4,240,053 samples, 0.03%)</title><rect x="18.9" y="437" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="21.86" y="447.5" ></text>
</g>
<g >
<title>rcu_dynticks_eqs_exit (1,917,623 samples, 0.01%)</title><rect x="1092.2" y="533" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1095.15" y="543.5" ></text>
</g>
<g >
<title>cpuidle_not_available (3,894,434 samples, 0.03%)</title><rect x="1189.0" y="533" width="0.3" height="15.0" fill="rgb(214,44,10)" rx="2" ry="2" />
<text  x="1191.96" y="543.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (10,826,137 samples, 0.07%)</title><rect x="17.4" y="453" width="0.9" height="15.0" fill="rgb(236,147,35)" rx="2" ry="2" />
<text  x="20.38" y="463.5" ></text>
</g>
<g >
<title>irq_enter_rcu (4,654,255 samples, 0.03%)</title><rect x="1110.4" y="453" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1113.39" y="463.5" ></text>
</g>
<g >
<title>__hrtimer_get_next_event (2,515,392 samples, 0.02%)</title><rect x="43.5" y="469" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="46.50" y="479.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (9,661,789 samples, 0.07%)</title><rect x="1087.9" y="517" width="0.8" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1090.92" y="527.5" ></text>
</g>
<g >
<title>load_balance (25,526,218 samples, 0.18%)</title><rect x="48.5" y="453" width="2.1" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="51.47" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2,312,261 samples, 0.02%)</title><rect x="42.3" y="373" width="0.2" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="45.34" y="383.5" ></text>
</g>
<g >
<title>hrtimer_wakeup (8,694,682 samples, 0.06%)</title><rect x="1109.0" y="405" width="0.7" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1112.02" y="415.5" ></text>
</g>
<g >
<title>rcu_idle_exit (8,435,934 samples, 0.06%)</title><rect x="1094.6" y="565" width="0.7" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1097.61" y="575.5" ></text>
</g>
<g >
<title>wake_up_process (181,247,820 samples, 1.25%)</title><rect x="25.1" y="453" width="14.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="28.12" y="463.5" ></text>
</g>
<g >
<title>all (14,474,383,996 samples, 100%)</title><rect x="10.0" y="693" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>common_interrupt (52,089,191 samples, 0.36%)</title><rect x="17.3" y="533" width="4.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="20.25" y="543.5" ></text>
</g>
<g >
<title>ttwu_do_activate (3,510,531 samples, 0.02%)</title><rect x="55.2" y="453" width="0.3" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="58.24" y="463.5" ></text>
</g>
<g >
<title>idle_cpu (3,505,767 samples, 0.02%)</title><rect x="53.8" y="501" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="56.77" y="511.5" ></text>
</g>
<g >
<title>e1000e_poll (4,240,053 samples, 0.03%)</title><rect x="18.9" y="453" width="0.3" height="15.0" fill="rgb(212,33,8)" rx="2" ry="2" />
<text  x="21.86" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (16,790,240 samples, 0.12%)</title><rect x="1109.0" y="437" width="1.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1112.02" y="447.5" ></text>
</g>
<g >
<title>clockevents_program_event (3,098,111 samples, 0.02%)</title><rect x="43.7" y="469" width="0.3" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="46.71" y="479.5" ></text>
</g>
<g >
<title>tick_irq_enter (17,225,711 samples, 0.12%)</title><rect x="44.9" y="501" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="47.89" y="511.5" ></text>
</g>
<g >
<title>psi_group_change (10,513,903 samples, 0.07%)</title><rect x="38.0" y="389" width="0.9" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="41.04" y="399.5" ></text>
</g>
<g >
<title>ttwu_do_wakeup (2,131,363 samples, 0.01%)</title><rect x="38.9" y="405" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="41.89" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (3,802,166 samples, 0.03%)</title><rect x="1111.4" y="389" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1114.38" y="399.5" ></text>
</g>
<g >
<title>ktime_get (11,089,739 samples, 0.08%)</title><rect x="44.9" y="485" width="1.0" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="47.95" y="495.5" ></text>
</g>
<g >
<title>call_cpuidle (3,881,111 samples, 0.03%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (3,435,481 samples, 0.02%)</title><rect x="1092.3" y="533" width="0.3" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1095.31" y="543.5" ></text>
</g>
<g >
<title>iterate_groups.isra.0 (28,981,962 samples, 0.20%)</title><rect x="35.5" y="389" width="2.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="38.46" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (8,694,682 samples, 0.06%)</title><rect x="1109.0" y="373" width="0.7" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="1112.02" y="383.5" ></text>
</g>
<g >
<title>rcu_idle_exit (3,435,481 samples, 0.02%)</title><rect x="1092.3" y="549" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="1095.31" y="559.5" ></text>
</g>
<g >
<title>hid_input_field (8,069,370 samples, 0.06%)</title><rect x="19.4" y="373" width="0.7" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="22.43" y="383.5" ></text>
</g>
<g >
<title>do_idle (13,469,528,194 samples, 93.06%)</title><rect x="10.7" y="613" width="1098.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.67" y="623.5" >do_idle</text>
</g>
<g >
<title>timerqueue_add (5,283,491 samples, 0.04%)</title><rect x="24.7" y="453" width="0.4" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="27.69" y="463.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="645" width="81.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1111.75" y="655.5" >x86_64_st..</text>
</g>
<g >
<title>ip_list_rcv (4,240,053 samples, 0.03%)</title><rect x="18.9" y="373" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="21.86" y="383.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (31,398,524 samples, 0.22%)</title><rect x="18.9" y="501" width="2.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="21.86" y="511.5" ></text>
</g>
<g >
<title>ip_local_deliver_finish (4,240,053 samples, 0.03%)</title><rect x="18.9" y="309" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="21.86" y="319.5" ></text>
</g>
<g >
<title>tcp_rcv_established (4,240,053 samples, 0.03%)</title><rect x="18.9" y="245" width="0.3" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="21.86" y="255.5" ></text>
</g>
<g >
<title>rb_erase (1,623,462 samples, 0.01%)</title><rect x="24.5" y="453" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="27.52" y="463.5" ></text>
</g>
<g >
<title>usb_hcd_submit_urb (3,248,348 samples, 0.02%)</title><rect x="21.2" y="389" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="24.15" y="399.5" ></text>
</g>
<g >
<title>switch_mm (7,688,280 samples, 0.05%)</title><rect x="1093.3" y="549" width="0.7" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1096.34" y="559.5" ></text>
</g>
<g >
<title>tick_program_event (4,356,486 samples, 0.03%)</title><rect x="43.7" y="485" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="46.71" y="495.5" ></text>
</g>
<g >
<title>irq_enter_rcu (27,401,195 samples, 0.19%)</title><rect x="44.1" y="517" width="2.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="47.06" y="527.5" ></text>
</g>
<g >
<title>irq_exit_rcu (11,299,236 samples, 0.08%)</title><rect x="1110.8" y="453" width="0.9" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1113.77" y="463.5" ></text>
</g>
<g >
<title>__wake_up (8,485,264 samples, 0.06%)</title><rect x="20.1" y="197" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="23.09" y="207.5" ></text>
</g>
<g >
<title>update_dl_rq_load_avg (2,697,379 samples, 0.02%)</title><rect x="51.8" y="453" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="54.81" y="463.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,116,042 samples, 0.01%)</title><rect x="19.3" y="373" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="22.26" y="383.5" ></text>
</g>
<g >
<title>hid_irq_in (26,500,494 samples, 0.18%)</title><rect x="19.3" y="421" width="2.1" height="15.0" fill="rgb(206,6,1)" rx="2" ry="2" />
<text  x="22.26" y="431.5" ></text>
</g>
<g >
<title>tcp_data_queue (4,240,053 samples, 0.03%)</title><rect x="18.9" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="21.86" y="239.5" ></text>
</g>
<g >
<title>switch_mm_irqs_off (6,190,741 samples, 0.04%)</title><rect x="1188.1" y="453" width="0.5" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1191.10" y="463.5" ></text>
</g>
<g >
<title>update_ts_time_stats (5,431,676 samples, 0.04%)</title><rect x="45.9" y="485" width="0.4" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="48.85" y="495.5" ></text>
</g>
<g >
<title>swapper (14,474,383,996 samples, 100.00%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.00" y="687.5" >swapper</text>
</g>
<g >
<title>hrtimer_wakeup (181,247,820 samples, 1.25%)</title><rect x="25.1" y="469" width="14.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="28.12" y="479.5" ></text>
</g>
<g >
<title>kfree (2,225,349 samples, 0.02%)</title><rect x="19.0" y="149" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="22.02" y="159.5" ></text>
</g>
<g >
<title>__update_load_avg_se (3,453,561 samples, 0.02%)</title><rect x="52.8" y="437" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="55.80" y="447.5" ></text>
</g>
<g >
<title>get_next_timer_interrupt (5,994,898 samples, 0.04%)</title><rect x="1108.1" y="533" width="0.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1111.13" y="543.5" ></text>
</g>
<g >
<title>__napi_poll (4,240,053 samples, 0.03%)</title><rect x="18.9" y="469" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="21.86" y="479.5" ></text>
</g>
<g >
<title>__usb_hcd_giveback_urb (26,500,494 samples, 0.18%)</title><rect x="19.3" y="437" width="2.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="22.26" y="447.5" ></text>
</g>
<g >
<title>cpuidle_select (155,943,280 samples, 1.08%)</title><rect x="1096.0" y="597" width="12.7" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="1099.03" y="607.5" ></text>
</g>
<g >
<title>hid_process_event (4,707,658 samples, 0.03%)</title><rect x="19.7" y="357" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="22.70" y="367.5" ></text>
</g>
<g >
<title>tick_irq_enter (4,654,255 samples, 0.03%)</title><rect x="1110.4" y="437" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="1113.39" y="447.5" ></text>
</g>
<g >
<title>kmem_cache_free (2,014,704 samples, 0.01%)</title><rect x="18.9" y="197" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="21.86" y="207.5" ></text>
</g>
<g >
<title>update_process_times (17,054,239 samples, 0.12%)</title><rect x="41.1" y="437" width="1.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="44.14" y="447.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (91,706,891 samples, 0.63%)</title><rect x="46.3" y="501" width="7.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="49.29" y="511.5" ></text>
</g>
<g >
<title>load_new_mm_cr3 (6,190,741 samples, 0.04%)</title><rect x="1188.1" y="437" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.10" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (32,425,078 samples, 0.22%)</title><rect x="18.9" y="517" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="21.86" y="527.5" ></text>
</g>
<g >
<title>start_kernel (996,680,958 samples, 6.89%)</title><rect x="1108.7" y="613" width="81.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1111.75" y="623.5" >start_ker..</text>
</g>
<g >
<title>evdev_events (13,066,734 samples, 0.09%)</title><rect x="20.1" y="293" width="1.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="23.09" y="303.5" ></text>
</g>
<g >
<title>pm_qos_read_value (16,325,979 samples, 0.11%)</title><rect x="1101.9" y="565" width="1.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1104.89" y="575.5" ></text>
</g>
<g >
<title>default_wake_function (5,194,942 samples, 0.04%)</title><rect x="20.4" y="69" width="0.4" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="23.36" y="79.5" ></text>
</g>
<g >
<title>find_busiest_group (15,211,159 samples, 0.11%)</title><rect x="49.3" y="437" width="1.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="52.31" y="447.5" ></text>
</g>
<g >
<title>xhci_irq (2,986,206 samples, 0.02%)</title><rect x="18.0" y="421" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="21.02" y="431.5" ></text>
</g>
<g >
<title>_nohz_idle_balance.isra.0 (4,344,404 samples, 0.03%)</title><rect x="1111.0" y="405" width="0.3" height="15.0" fill="rgb(235,139,33)" rx="2" ry="2" />
<text  x="1113.98" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_idle_got_tick (2,793,815 samples, 0.02%)</title><rect x="1095.8" y="581" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1098.81" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (13,626,852 samples, 0.09%)</title><rect x="41.4" y="421" width="1.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="44.42" y="431.5" ></text>
</g>
<g >
<title>update_cfs_group (3,510,531 samples, 0.02%)</title><rect x="55.2" y="405" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="58.24" y="415.5" ></text>
</g>
<g >
<title>usb_submit_urb (3,248,348 samples, 0.02%)</title><rect x="21.2" y="405" width="0.2" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="24.15" y="415.5" ></text>
</g>
<g >
<title>rb_next (3,163,939 samples, 0.02%)</title><rect x="1104.8" y="517" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1107.79" y="527.5" ></text>
</g>
<g >
<title>intel_idle (692,971,027 samples, 4.79%)</title><rect x="55.6" y="549" width="56.5" height="15.0" fill="rgb(237,147,35)" rx="2" ry="2" />
<text  x="58.58" y="559.5" >intel..</text>
</g>
<g >
<title>ktime_get (3,406,380 samples, 0.02%)</title><rect x="39.9" y="453" width="0.3" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="42.90" y="463.5" ></text>
</g>
<g >
<title>hid_report_raw_event (21,136,104 samples, 0.15%)</title><rect x="19.4" y="389" width="1.8" height="15.0" fill="rgb(252,217,52)" rx="2" ry="2" />
<text  x="22.43" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (413,806,372 samples, 2.86%)</title><rect x="21.5" y="549" width="33.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="24.50" y="559.5" >as..</text>
</g>
<g >
<title>rm_gpu_handle_mmu_faults (5,254,943 samples, 0.04%)</title><rect x="17.6" y="437" width="0.4" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="20.59" y="447.5" ></text>
</g>
<g >
<title>select_task_rq_fair (5,194,942 samples, 0.04%)</title><rect x="20.4" y="37" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="23.36" y="47.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (4,184,604 samples, 0.03%)</title><rect x="55.2" y="533" width="0.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="58.24" y="543.5" ></text>
</g>
<g >
<title>rebalance_domains (4,344,404 samples, 0.03%)</title><rect x="1111.0" y="389" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1113.98" y="399.5" ></text>
</g>
<g >
<title>rcu_eqs_exit.constprop.0 (9,604,435 samples, 0.07%)</title><rect x="1091.4" y="549" width="0.8" height="15.0" fill="rgb(209,20,5)" rx="2" ry="2" />
<text  x="1094.37" y="559.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (271,027,653 samples, 1.87%)</title><rect x="22.0" y="517" width="22.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="24.97" y="527.5" >_..</text>
</g>
<g >
<title>ep_poll_callback (5,194,942 samples, 0.04%)</title><rect x="20.4" y="149" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="23.36" y="159.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (3,978,989 samples, 0.03%)</title><rect x="41.5" y="405" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="44.49" y="415.5" ></text>
</g>
<g >
<title>__next_base (1,584,953 samples, 0.01%)</title><rect x="43.6" y="453" width="0.1" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="46.58" y="463.5" ></text>
</g>
<g >
<title>intel_idle_ibrs (877,865,434 samples, 6.06%)</title><rect x="1116.5" y="485" width="71.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1119.53" y="495.5" >intel_id..</text>
</g>
<g >
<title>enqueue_hrtimer (5,283,491 samples, 0.04%)</title><rect x="24.7" y="469" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="27.69" y="479.5" ></text>
</g>
<g >
<title>note_interrupt (5,990,552 samples, 0.04%)</title><rect x="18.4" y="453" width="0.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="21.37" y="463.5" ></text>
</g>
<g >
<title>ip_protocol_deliver_rcu (4,240,053 samples, 0.03%)</title><rect x="18.9" y="293" width="0.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="21.86" y="303.5" ></text>
</g>
<g >
<title>update_process_times (6,455,328 samples, 0.04%)</title><rect x="1109.7" y="373" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1112.73" y="383.5" ></text>
</g>
<g >
<title>timerqueue_iterate_next (1,694,091 samples, 0.01%)</title><rect x="1106.2" y="533" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1109.21" y="543.5" ></text>
</g>
<g >
<title>psi_flags_change (2,618,805 samples, 0.02%)</title><rect x="37.8" y="389" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="40.82" y="399.5" ></text>
</g>
<g >
<title>call_cpuidle (13,306,848,782 samples, 91.93%)</title><rect x="10.7" y="597" width="1084.8" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.67" y="607.5" >call_cpuidle</text>
</g>
<g >
<title>_find_next_bit (1,563,257 samples, 0.01%)</title><rect x="50.4" y="405" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="53.37" y="415.5" ></text>
</g>
</g>
</svg>
